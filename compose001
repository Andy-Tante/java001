docker-compose file default name = docker-compose.yml:
     - login, registration, cart, checkout, payment, order 
docker --version 
Docker version 20.10.12,    build 20.10.12-0ubuntu4
3.1                     1.13.1+
3.1                     20.10.12

version: '3.1'
volumes:
  data25:
    driver: local
  data28:
    driver: rexray/ebs
networks:
  ecommerce:
    driver: bridge
  amazon:
    driver: bridge
services:
  login 
  registration 
  cart 
  checkout 
  payment 
  order



yaml/yml: kubernetes / ansible / docker-compose
key:value pairs 
  name: simon     
dictionary 
  name: simon   
  age: 25  
  company: mylandmarktech 
list/array:
students:
  - simon  
  - james 
  - paul 
environment:
- hostname 
- username  
- password   

docker run --name springapp -d -p 4000:8080 --network tesla -e MONGO_DB_USERNAME=devdb \
 -e MONGO_DB_PASSWORD=dev@123 -e MONGO_DB_HOSTNAME=mongo mylandmarktech/spring-boot-mongo


version: '3.1'
services:
  springapp:
    image: mylandmarktech/spring-boot-mongo
    restart: always
    ports:
      - 3000:8080 
    networks:
      - amazon    
    environment:
      - MONGO_DB_HOSTNAME=mongo
      - MONGO_DB_USERNAME=proddb
      - MONGO_DB_PASSWORD=prod@123      
  mongo:  
    image: mongo 
    restart: always
    volumes:
      - data28:/data/db   
    networks:
      - amazon     
    environment:
      - MONGO_INITDB_ROOT_USERNAME=proddb
      - MONGO_INITDB_ROOT_PASSWORD=prod@123      
volumes:
  data28:
    driver: local
networks:
  amazon:
    driver: bridge


sudo apt  install docker-compose 
Commands
-# Syntax Check
docker-compose config 

deploy with existing network/volumes:
======================
version: '3.1'
services:
  springapp:
    image: mylandmarktech/spring-boot-mongo
    restart: always
    ports:
      - 3000:8080
    networks:
      - ebay
    environment:
      - MONGO_DB_HOSTNAME=mongo
      - MONGO_DB_USERNAME=proddb
      - MONGO_DB_PASSWORD=prod@123
  mongo:
    image: mongo
    restart: always
    volumes:
      - ebs30:/data/db
    networks:
      - ebay
    environment:
      - MONGO_INITDB_ROOT_USERNAME=proddb
      - MONGO_INITDB_ROOT_PASSWORD=prod@123
volumes:
  ebs30:
    external: true
networks:
  ebay:
    external: true

             dev     uat      prod   
USERNAME   devdb     uatdb    proddb   
hostname   mongo     mymongo  mongodb  
password   dev@123   uat@123  admib@#123  

# Create Services/Contianers
docker-compose up -d  
  
# Remove Services/Contianers 
docker-compose down


  
  
If docker compose file with custom name.  
docker-compose -f <CustomeComposeFileName>.yml <command>

Ex:
docker-compose -f docker-compose-springapp.yml config
docker-compose -f docker-compose-springapp.yml up -d

docker-compose -f docker-compose-springapp.yml down

docker-compose help

Docker Compose Commands:

  Ex:
docker-compose default file: docker-compose.yml
docker-compose -f docker-compose.yml up -d 
docker-compose up -d
docker-compose config 

docker-compose custom file: docker-compose-springapp.yml
docker-compose -f docker-compose-springapp.yml config
docker-compose -f docker-compose-springapp.yml up -d

docker-compose -f docker-compose-springapp.yml down

